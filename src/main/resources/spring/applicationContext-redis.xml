<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">


    <!-- 加载配置文件 -->  
	<!-- 加载配置文件 -->
	<!--  <context:property-placeholder location="classpath:properties/redis.properties" />  -->
    <!-- redis数据源 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大空闲数 -->
        <property name="maxIdle" value="${redis.maxIdle}" />
        <!-- 最大空连接数 -->
        <property name="maxTotal" value="${redis.maxTotal}" />
        <!-- 最大等待时间 -->
        <property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
        <!-- 连接超时时是否阻塞，false时报异常,ture阻塞直到超时, 默认true -->
         <property name="blockWhenExhausted" value="${redis.blockWhenExhausted}" /> 
        <!-- 返回连接时，检测连接是否成功 -->
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
    </bean>
	 <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" destroy-method="destroy"> 
  		<property name="poolConfig" ref="jedisPoolConfig"></property> 
  		<property name="hostName" value="${redis.hostName}"></property> 
  		<property name="port" value="${redis.port}"></property> 
  		<property name="password" value="${redis.password}" />
  		<property name="database" value="${redis.dbIndex}"/>
  		<property name="timeout" value="${redis.timeout}"></property> 
  		<property name="usePool" value="${redis.usePool}"></property> 
 	</bean> 
	 <bean id="jedisTemplate" class="org.springframework.data.redis.core.RedisTemplate"> 
  		<property name="connectionFactory" ref="jedisConnectionFactory"></property> 
  		<property name="keySerializer"> 
  	 		<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/> 
  		</property> 
  		<property name="valueSerializer"> 
   			<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/> 
  		</property> 
 	</bean> 
</beans>